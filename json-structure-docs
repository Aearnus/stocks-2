this populates the ids/ folder, with files named <user id>
user:
{
    "id": "<user id>",
    "money": 100,
    "createdStocks": [<list of stock names>],
    "ownedStocks": {
        "<stock name>": {
            "name": "<stock name>",
            "shares": amount of shares
        },
        "<stock name>": {
            "name": "<stock name>",
            "shares": amount of shares
        },
        ...
    }
    "openOrders": [
        {
            "name": "<stock name>",
            "uuid": "<transaction uuid>"
        },
        {
            "name": "<stock name>",
            "uuid": "<transaction uuid>"
        },
        ...
    ]
}

this populates the stocks/ folder, with files named <stock name>
stock:
{
    --names can be up to 10 characters long
    "name": "<stock name>",
    --descriptions can be up to 100 characters long
    "desc": "<stock description>",
    "time": <unix timestamp>
    --minimum amount of shares to start a stock with is 200
    "shares": 200,
    "createdBy": "<id of user>",
    "history": [
        {
            "transaction": "buy", "sell", or "done"
            --IMPORTANT NOTE: BUY denotes the fact that someone has created a buy order.
            --SELL denotes that someone has created a sell order.
            --DONE denotes that the stock has changed hands
            "time": <unix timestamp>,
            "amount": <total shares to transfer>,
            "amountDone": <shares transferred>,
            "value": <monetary value of 1 share>,
            "uuid": <special id of the transaction>,
            "userId": <internal identification of the seller. SHOULD BE SANITIZED>
        },
        {
            "transaction": "buy" or "sell",
            "time": <unix timestamp>,
            "amount": <total shares to transfer>,
            "amountDone": <shares transferred>,
            "value": <monetary value of 1 share>,
            "uuid": <special id of the transaction>,
            "userId": <internal identification of the seller. SHOULD BE SANITIZED>
        }
        ...
    ],
    "averageValue": <value, set by get_stock_value in helper-functions.rb>
}
